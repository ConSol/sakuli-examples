# Apache configuration file for Check_MK
#
# This version has been adapted for OMD. The authentication
# has been removed to a separate file which is shared with
# other web applications.

# This shares the check_mk agents delivered with the OMD
# version via HTTP
Alias /demo/check_mk/agents /omd/sites/demo/share/check_mk/agents
<Directory /omd/sites/demo/share/check_mk/agents>
  Options +Indexes
  Order deny,allow
  allow from all
</Directory>

<IfModule mod_python.c>
  # Handle locally installed files via the internal URI /demo/check_mk/local
  # These are files stored below local/share/check_mk/web/htdocs
  Alias /demo/check_mk/local /omd/sites/demo/local/share/check_mk/web/htdocs
  <Directory /omd/sites/demo/local/share/check_mk/web/htdocs>
        Order deny,allow
        allow from all
  </Directory>

  Alias /demo/check_mk /omd/sites/demo/share/check_mk/web/htdocs
  <Directory /omd/sites/demo/share/check_mk/web/htdocs>
        AddHandler mod_python .py
        PythonHandler index
        PythonOption mod_python.importer.path "['/omd/sites/demo/local/share/check_mk/web/htdocs', '/omd/sites/demo/share/check_mk/web/htdocs']"
        PythonInterpreter demo
        DirectoryIndex index.py

        Order deny,allow
        allow from all

        # During updates of Check_MK we experience caching problems with js/css
        # files where the browser does not reload the changed files, but uses
        # it's caches based on the old version. Might be related to the frameset
        # we use. Our workaround: Add the version string to the file names at
        # least for the browser requests. The files on the system do not contain
        # the version strings. This is done with mod_rewrite.
        # e.g. change http://localhost/event/check_mk/js/checkmk-2014.10.22.js to
        # e.g. change http://localhost/event/check_mk/js/checkmk.js
        RewriteRule "^(js/|)([a-z0-9_]+)-(.+?)\.(js|css)$" "/demo/check_mk/$1$2.$4"

        # Rewrite rules for handling the local-hierarchy. All URI to static
        # files are redirected, if those exist in local/. Thus the user
        # even can override shipped static files. URIs ending in .py must
        # be skipped. Those are no files. They are handled by Multisite itself.
        RewriteEngine on
        RewriteCond "$1" "!.*\.py$"
        RewriteCond "/omd/sites/demo/local/share/check_mk/web/htdocs/$1" "-f"
        RewriteRule "(.*)" "/demo/check_mk/local/$1"

        ErrorDocument 403 "<h1>Authentication Problem</h1>Either you've entered an invalid password or the authentication<br>configuration of your check_mk web pages is incorrect.<br>"
  </Directory>

  # Allow access to sounds without authentication. This avoid a problem
  # with totem plugin in Firefox on Linux (and maybe others as well)
  <Location "/demo/check_mk/sounds">
      Order allow,deny
      Allow from all
      Satisfy any
  </Location>

  # Access to automation.py is done without HTTP Authentication.
  <Location "/demo/check_mk/automation.py">
      Order allow,deny
      Allow from all
      Satisfy any
  </Location>

  # Trigger cron jobs. This is done without authentication
  <Location "/demo/check_mk/run_cron.py">
      Order deny,allow
      Deny from all
      Allow from 127.0.0.1
      Satisfy any
  </Location>

</IfModule>

<IfModule !mod_python.c>
  Alias /demo/check_mk /omd/sites/demo/share/check_mk/web/htdocs
  <Directory /omd/sites/demo/share/check_mk/web/htdocs>
        Deny from all
        ErrorDocument 403 "<h1>Check_mk: Incomplete Apache2 Installation</h1>You need mod_python in order to run the web interface of check_mk.<br> Please install mod_python and restart Apache."
  </Directory>
</IfModule>
